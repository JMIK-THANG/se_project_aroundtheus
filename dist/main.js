!function(){"use strict";class e{constructor(e,t,r,s,o){let{name:i,link:n,_id:l,isLiked:a}=e;this._handleLikeButtonClick=o,this._cardId=l,this.isLiked=a,this._name=i,this._link=n,this._handleImageClick=r,this._handleDeleteClick=s,this._cardSelector=t}getId(){return this._cardId}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeButtonClick(this)})),this._deleteButton=this._cardElement.querySelector(".delete__button"),this._deleteButton.addEventListener("click",(e=>this._handleDeleteClick(this,this._cardId))),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}likeCardOnDom(){this._likeButton.classList.add("card__like-button_active")}unLikeCardOnDom(){this._likeButton.classList.remove("card__like-button_active")}remove(){this._cardElement.remove()}_setLikeOnPageLoad(){this.isLiked&&this.likeCardOnDom()}getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._setEventListeners(),this._setLikeOnPageLoad(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t}_showInputError(e){this._errorMessageEle=this._element.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEle.textContent=e.validationMessage,this._errorMessageEle.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._element.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.classList.remove(this._errorClass),this._errorMessageEl.textContent=""}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputElements=[...this._element.querySelectorAll(this._inputSelector)],this._submitButton=this._element.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(e)}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeEscHandler)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeEscHandler)}_closeEscHandler=e=>{"Escape"===e.key&&this.closeModal()};_closeOverlayHandler(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.closeModal()})),this._popupElement.addEventListener("click",(e=>this._closeOverlayHandler(e)))}}class s extends r{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=r}_getInputValues(){const e=Array.from(this._popupElement.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset()}))}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".profile__add-button")),n=document.querySelector(".modal_add-card"),l=n.querySelector(".modal__form"),a=document.querySelector(".profile__edit-button"),c=document.querySelector(".image__edit-button"),d=document.querySelector("#profile-picture-modal"),u=document.querySelector(".modal_edit-profile").querySelector(".modal__form"),_=document.querySelector(".modal__input-title"),h=document.querySelector(".modal__input-description"),m=(document.querySelector(".cards__list"),n.querySelector(".modal__input-title"),n.querySelector(".modal__input-description"),document.querySelector("#card__template").content.firstElementChild,document.querySelector(".modal_preview-image"));m.querySelector(".modal__image"),m.querySelector(".modal__description"),document.querySelectorAll(".modal__close");const p=new t(o,l);p.enableValidation(),new t(o,u).enableValidation();const S=new t(o,d);S.enableValidation();const E=new s({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){L.updateUserInfo(e.title,e.description).then((e=>{k.setUserInfo(e.name,e.about),E.closeModal()}))}});E.setEventListeners();const f=new s({popupSelector:"#modal-add-card",handleFormSubmit:function(e){const t=e.title,r=e.url;L.addNewCards(t,r).then((e=>{!function(e){const t=y(e);v.addItem(t)}(e)})).catch((e=>{alert("Could not add a card!"),console.error(e)})).finally((()=>{C.renderLoading(!1)})),f.closeModal(),l.reset(),p.disableSubmitButton()}});f.setEventListeners();const b=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalImage=document.querySelector(".modal__image"),this._modalImageCaption=document.querySelector(".modal__description")}openModal(e){let{name:t,link:r}=e;this._modalImage.src=r,this._modalImage.alt=t,this._modalImageCaption.textContent=t,super.openModal()}}({popupSelector:".modal_preview-image"});b.setEventListeners();const v=new class{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}setItems(e){this._items=e}}({items:[],renderer:e=>{const t=y(e);v.addItem(t)}},".cards__list"),k=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:r,profilePictureSelector:s}=e;this._profileName=document.querySelector(t),this._profileDescription=document.querySelector(r),this._profilePicture=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileDescription.textContent=t}setUserPicture(e){this._profilePicture.src=e}}({profileNameSelector:".profile__title",profileDescriptionSelector:".profile__description",profilePictureSelector:".profile__image"}),L=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateUserPicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addNewCards(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}disLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"45288969-7703-40e1-b9c1-60a8b41e2f8f","Content-Type":"application/json"}});function y(t){return new e(t,"#card__template",g,I,q).getCardElement()}function g(e){b.openModal(e)}L.getInitialCards().then((e=>{v.setItems(e),v.renderItems()})).catch(console.error),L.getUserInfo().then((e=>{k.setUserInfo(e.name,e.about),k.setUserPicture(e.avatar)})).catch((e=>{alert("Could not get user info!"),console.error(e)}));const C=new class extends r{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button")}setSubmitHandler(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}renderLoading(e){this._submitButton.textContent=e?"save...":this._submitButtonText}}({popupSelector:"#popup-confirm-delete"});function I(e,t){C.openModal(),C.setSubmitHandler((()=>{C.renderLoading(!0),L.deleteCard(t).then((()=>{e.remove(),C.closeModal()})).catch(console.err).finally((()=>{C.renderLoading(!1)}))}))}function q(e){console.log(e.isLiked),e.isLiked?L.disLikeCard(e.getId()).then((()=>{e.unLikeCardOnDom(),this.isLiked=!1})).catch(console.err):L.likeCard(e.getId()).then((()=>{e.likeCardOnDom(),this.isLiked=!0})).catch(console.err)}C.setEventListeners(),a.addEventListener("click",(()=>{const e=k.getUserInfo();_.value=e.name,h.value=e.description,E.openModal()})),i.addEventListener("click",(()=>f.openModal()));const B=new s({popupSelector:"#profile-picture-modal",handleFormSubmit:e=>{const t=e.picture;t?L.updateUserPicture(t).then((e=>{console.log(e),k.setUserPicture(e.avatar),S.disableSubmitButton(),B.closeModal()})).catch((e=>{console.error("Fail",e)})).finally((()=>{})):console.log("URL missing")}});B.setEventListeners(),c.addEventListener("click",(()=>{B.openModal()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,