!function(){"use strict";class e{constructor(e,t,o){let{name:s,link:r}=e;this._name=s,this._link=r,this._handleImageClick=o,this._cardSelector=t}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton=this._cardElement.querySelector(".delete__button"),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteIcon()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteIcon(){this._cardElement.remove()}getCardElement(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardTitle.textContent=this._name,this._setEventListeners(),this._cardElement}}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t}_showInputError(e){this._errorMessageEle=this._element.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEle.textContent=e.validationMessage,this._errorMessageEle.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._element.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.classList.remove(this._errorClass),this._errorMessageEl.textContent=""}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputElements=[...this._element.querySelectorAll(this._inputSelector)],this._submitButton=this._element.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(e)}))}))}enableValidation(){this._element.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class o{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close")}openModal(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeEscHandler)}closeModal(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeEscHandler)}_closeEscHandler=e=>{"Escape"===e.key&&this.closeModal()};_closeOverlayHandler(e){e.target===this._popupElement&&this.closeModal()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.closeModal()})),this._popupElement.addEventListener("click",(e=>this._closeOverlayHandler(e)))}}class s extends o{constructor(e){let{popupSelector:t,handleFormSubmit:o}=e;super({popupSelector:t}),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=o}_getInputValues(){const e=Array.from(this._popupElement.querySelectorAll(".modal__input"));console.log(e);const t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset()}))}}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".profile__add-button")),i=document.querySelector(".modal_add-card"),l=i.querySelector(".modal__form"),a=document.querySelector(".profile__edit-button"),c=document.querySelector(".modal_edit-profile").querySelector(".modal__form"),d=document.querySelector(".modal__input-title"),u=document.querySelector(".modal__input-description"),_=(document.querySelector(".cards__list"),i.querySelector(".modal__input-title"),i.querySelector(".modal__input-description"),document.querySelector("#card__template").content.firstElementChild,document.querySelector(".modal_preview-image")),m=(_.querySelector(".modal__image"),_.querySelector(".modal__description"),document.querySelectorAll(".modal__close"),new t(r,l));m.enableValidation(),new t(r,c).enableValidation();const p=new s({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){v.setUserInfo(e.title,e.description),p.closeModal()}});p.setEventListeners();const h=new s({popupSelector:"#modal-add-card",handleFormSubmit:function(e){(function(e){const t=g(e);E.addItem(t)})({name:e.title,link:e.url}),h.closeModal(),l.reset(),m.disableSubmitButton()}});h.setEventListeners();const S=new class extends o{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._modalImage=document.querySelector(".modal__image"),this._modalImageCaption=document.querySelector(".modal__description")}openModal(e){let{name:t,link:o}=e;this._modalImage.src=o,this._modalImage.alt=t,this._modalImageCaption.textContent=t,super.openModal()}}({popupSelector:".modal_preview-image"});S.setEventListeners();const E=new class{constructor(e,t){let{items:o,renderer:s}=e;this._data=o,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._data.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=g(e);E.addItem(t)}},".cards__list");E.renderItems();const v=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:o}=e;this._profileName=document.querySelector(t),this._profileDescription=document.querySelector(o)}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileDescription.textContent=t}}({profileNameSelector:".profile__title",profileDescriptionSelector:".profile__description"});function g(t){return new e(t,"#card__template",f).getCardElement()}function f(e){S.openModal(e)}a.addEventListener("click",(()=>{const e=v.getUserInfo();d.value=e.name,u.value=e.description,p.openModal()})),n.addEventListener("click",(()=>h.openModal()))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,